import json
import telebot
import time
import os
from datetime import datetime, timedelta
import random

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º
bot = telebot.TeleBot("5995350835:AAFzZ9Os5oWSTBCVbuDcnTFAPFULi3V1trA")

# –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
if not os.path.exists('C:\\Users\\Venthell\\Desktop\\ChertilaRoulette\\data.json'):
    # –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Ç–æ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø—É—Å—Ç—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    data = {'users': {}}
    save_data(data)

# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö JSON
def load_data():
    with open('C:\\Users\\Venthell\\Desktop\\ChertilaRoulette\\data.json', 'r') as f:
        return json.load(f)

# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö JSON
def save_data(data):
    with open('C:\\Users\\Venthell\\Desktop\\ChertilaRoulette\\data.json', 'w') as f:
        json.dump(data, f, indent=4)

# –∫–æ–º–∞–Ω–¥–∞ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
@bot.message_handler(commands=['start'])
def start_handler(message):
    user_id = message.from_user.id
    data = load_data()
    if str(user_id) not in data['users']:
        data['users'][str(user_id)] = {'balance': 1000, 'last_bonus': None}
        save_data(data)
        bot.reply_to(message, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n–í—ã –ø–æ–ª—É—á–∏–ª–∏ 1000 –º–æ–Ω–µ—Ç –Ω–∞ —Å–≤–æ–π –±–∞–ª–∞–Ω—Å.")
    else:
        bot.reply_to(message, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.\n–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: " + str(data['users'][str(user_id)]['balance']) + " –º–æ–Ω–µ—Ç.")

# –∫–æ–º–∞–Ω–¥–∞ /balance –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞
@bot.message_handler(commands=['balance'])
def balance_handler(message):
    user_id = message.from_user.id
    data = load_data()
    if str(user_id) in data['users']:
        bot.reply_to(message, "–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: " + str(data['users'][str(user_id)]['balance']) + " –º–æ–Ω–µ—Ç.")
    else:
        bot.reply_to(message, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.")

# –∫–æ–º–∞–Ω–¥–∞ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏
@bot.message_handler(commands=['help'])
def help_handler(message):
    bot.reply_to(message, "–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n\n\n/start - –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –ø–æ–ª—É—á–∏—Ç—å 1000 –º–æ–Ω–µ—Ç –Ω–∞ –±–∞–ª–∞–Ω—Å\n\n/balance - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å\n\n/bonus - –ø–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å\n\n/roulette <—Ü–≤–µ—Ç> <—Å—Ç–∞–≤–∫–∞> - –ø–æ—Å—Ç–∞–≤–∏—Ç—å –º–æ–Ω–µ—Ç—ã –Ω–∞ —Ü–≤–µ—Ç (–∫—Ä–∞—Å–Ω—ã–π, —á–µ—Ä–Ω—ã–π –∏–ª–∏ –∑–µ–ª–µ–Ω—ã–π) –≤ —Ä—É–ª–µ—Ç–∫–µ")

# –∫–æ–º–∞–Ω–¥–∞ /bonus –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞
@bot.message_handler(commands=['bonus'])
def bonus_handler(message):
    user_id = message.from_user.id
    data = load_data()
    if str(user_id) in data['users']:
        last_bonus = data['users'][str(user_id)]['last_bonus']
        if last_bonus is not None and datetime.now() - datetime.strptime(last_bonus, '%Y-%m-%d %H:%M:%S.%f') < timedelta(hours=24):
            remaining_time = datetime.strptime(last_bonus, '%Y-%m-%d %H:%M:%S.%f') + timedelta(hours=24) - datetime.now()
            hours = remaining_time.seconds // 3600
            minutes = (remaining_time.seconds // 60) % 60
            bot.reply_to(message, "–í–∞—à –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å —É–∂–µ –ø–æ–ª—É—á–µ–Ω.\n–°–ª–µ–¥—É—é—â–∏–π –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ " + str(hours) + " —á–∞—Å–æ–≤ " + str(minutes) + " –º–∏–Ω—É—Ç.")
        else:
            data['users'][str(user_id)]['balance'] += 100
            data['users'][str(user_id)]['last_bonus'] = str(datetime.now())
            save_data(data)
            bot.reply_to(message, "–í—ã –ø–æ–ª—É—á–∏–ª–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å –≤ —Ä–∞–∑–º–µ—Ä–µ 100 –º–æ–Ω–µ—Ç.\n–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: " + str(data['users'][str(user_id)]['balance']) + " –º–æ–Ω–µ—Ç.")
    else:
        bot.reply_to(message, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.")

@bot.message_handler(commands=['roulette'])
def roulette_handler(message):
    user_id = message.from_user.id
    data = load_data()
    if str(user_id) in data['users']:
        args = message.text.split()[1:]
        if len(args) != 2:
            bot.reply_to(message, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /roulette <color> <amount>")
            return

        color = args[0].lower()
        amount = args[1]

        if color not in ['–∫—Ä–∞—Å–Ω—ã–π', '—á–µ—Ä–Ω—ã–π', '–∑–µ–ª–µ–Ω—ã–π']:
            bot.reply_to(message, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ü–≤–µ—Ç. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–≤–µ—Ç–∞: –∫—Ä–∞—Å–Ω—ã–π, —á–µ—Ä–Ω—ã–π, –∑–µ–ª–µ–Ω—ã–π")
            return

        try:
            amount = int(amount)
        except ValueError:
            bot.reply_to(message, "–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç. –£–∫–∞–∂–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.")
            return

        if amount <= 0:
            bot.reply_to(message, "–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç. –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.")
            return

        if amount > data['users'][str(user_id)]['balance']:
            bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç –Ω–∞ –±–∞–ª–∞–Ω—Å–µ.")
            return

        # —Å–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏
        data['users'][str(user_id)]['balance'] -= amount
        save_data(data)

        # Send the spinning roulette wheel animation
        with open('C:\\Users\\Venthell\\Desktop\\ChertilaRoulette\\gif\\casino-gamble.gif', 'rb') as f:
            bot.send_animation(message.chat.id, f)

        time.sleep(3)  # Delay for 3 seconds to simulate spinning time

        # –≤—ã–ø–æ–ª–Ω—è–µ–º —Å–ª—É—á–∞–π–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ü–≤–µ—Ç–∞
        result_color = random.choice(['üî¥ –∫—Ä–∞—Å–Ω—ã–π', '‚ö´ —á–µ—Ä–Ω—ã–π', 'üü¢ –∑–µ–ª–µ–Ω—ã–π'])

        if result_color.startswith('üî¥') and color == '–∫—Ä–∞—Å–Ω—ã–π':
            # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–∏–≥—Ä–∞–ª
            win_amount = amount * 2  # –≤—ã–∏–≥—Ä—ã—à —Ä–∞–≤–µ–Ω —É–¥–≤–æ–µ–Ω–Ω–æ–π —Å—É–º–º–µ —Å—Ç–∞–≤–∫–∏
            data['users'][str(user_id)]['balance'] += win_amount
            save_data(data)
            bot.reply_to(message, f"–ù–∞–π—Å –∫–æ–∫! –í—ã–ø–∞–ª —Ü–≤–µ—Ç {result_color}.\n–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ {win_amount} –º–æ–Ω–µ—Ç.\n–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {data['users'][str(user_id)]['balance']} –º–æ–Ω–µ—Ç.")
        elif result_color.startswith('‚ö´') and color == '—á–µ—Ä–Ω—ã–π':
            # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–∏–≥—Ä–∞–ª
            win_amount = amount * 2  # –≤—ã–∏–≥—Ä—ã—à —Ä–∞–≤–µ–Ω —É–¥–≤–æ–µ–Ω–Ω–æ–π —Å—É–º–º–µ —Å—Ç–∞–≤–∫–∏
            data['users'][str(user_id)]['balance'] += win_amount
            save_data(data)
            bot.reply_to(message, f"–°–Æ–î–ê–ê–ê–ê–ê–ê! –í—ã–ø–∞–ª —Ü–≤–µ—Ç {result_color}.\n–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ {win_amount} –º–æ–Ω–µ—Ç.\n–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {data['users'][str(user_id)]['balance']} –º–æ–Ω–µ—Ç.")
        elif result_color.startswith('üü¢') and color == '–∑–µ–ª–µ–Ω—ã–π':
            # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–∏–≥—Ä–∞–ª
            win_amount = amount * 14  # –≤—ã–∏–≥—Ä—ã—à —Ä–∞–≤–µ–Ω 14-–∫—Ä–∞—Ç–Ω–æ–π —Å—É–º–º–µ —Å—Ç–∞–≤–∫–∏
            data['users'][str(user_id)]['balance'] += win_amount
            save_data(data)
            bot.reply_to(message, f"–ò–º–±–∞! –í—ã–ø–∞–ª —Ü–≤–µ—Ç {result_color}.\n–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ {win_amount} –º–æ–Ω–µ—Ç.\n–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {data['users'][str(user_id)]['balance']} –º–æ–Ω–µ—Ç.")
        else:
            # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–∏–≥—Ä–∞–ª
            bot.reply_to(message, f"–Å–±–∞–Ω—ã–π —Ä–æ—Ç —ç—Ç–æ–≥–æ –∫–∞–∑–∏–Ω–æ –±–ª—è—Ç—å! –í—ã–ø–∞–ª —Ü–≤–µ—Ç {result_color}.\n–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ {amount} –º–æ–Ω–µ—Ç.\n–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {data['users'][str(user_id)]['balance']} –º–æ–Ω–µ—Ç.")
            save_data(data)

    else:
        bot.reply_to(message, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.")

# –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.polling()